//Done

The API must be able to return data in the JSON format.

API Users must be able to create an account and log in.
	User must get a token from "/account/token" endpoint. Then she must set the token in request header to access authorized pages

All API calls must be authenticated.
	JSON Web Token Authentication based on https://tools.ietf.org/html/rfc7519

Write unit tests
	Features and Infrastructure are tested with sociable unit testing methodology

Each entry has a date, time, text, and number of calories.
	If the number of calories is not provided, 
		the API should connect to a Calories API provider (for example https://www.nutritionix.com) 
			and try to get the number of calories for the entered meal.

Write a REST API for the input of calories

The API should provide pagination for all endpoints that return a list of elements

Implement at least three roles with different permission levels: 
	a regular user would only be able to CRUD on their owned records, 
	a user manager would be able to CRUD only users, 
	and an admin would be able to CRUD all records and users.

User setting â€“ Expected number of calories per day.
	Each entry should have an extra boolean field set to true if the total for that day is less than expected number of calories per day, 
		otherwise should be false.

		The API should provide filter capabilities for all endpoints that return a list of elements

The API filtering should allow using parenthesis for defining operations precedence and use any combination of the available fields. 
	The supported operations should at least include 
		or, 
		and, 
		eq (equals), 
		ne (not equals), 
		gt (greater than), 
		lt (lower than).

		Example -> (date eq '2016-05-01') AND ((number_of_calories gt 20) OR (number_of_calories lt 10)).


FILTER NOTES

Supported Binary Operators
	Or,
    And,
    Equal as eq,
    NotEqual as ne,
    GreaterThan as gt,
    GreaterThanOrEqual as ge,
    LessThan as lt,
    LessThanOrEqual as le

Supported Unary Operators
	Minus as "-"
	Not as "not"

DateTime, Bollean, and Decimal values must be enclosed with quotes

